#
#  Copyright (c) 2020, Oracle and/or its affiliates. All rights reserved.
#  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
# 
#  This code is free software; you can redistribute it and/or modify it
#  under the terms of the GNU General Public License version 2 only, as
#  published by the Free Software Foundation.
# 
#  This code is distributed in the hope that it will be useful, but WITHOUT
#  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
#  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
#  version 2 for more details (a copy is included in the LICENSE file that
#  accompanied this code).
# 
#  You should have received a copy of the GNU General Public License version
#  2 along with this work; if not, write to the Free Software Foundation,
#  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
# 
#  Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
#  or visit www.oracle.com if you need additional information or have any
#  questions.
#

# error message
cannot.read.header.file=cannot read header file: {0}
not.a.file=not a file: {0}
l.option.value.invalid=option value for -l option should be a name or an absolute path

# help messages for options
help.C=pass through argument for clang
help.I=specify include files path
help.d=specify where to place generated files
help.include-macro=name of constant macro to include
help.include-var=name of global variable to include
help.include-function=name of function to include
help.include-typedef=name of type definition to include
help.include-struct=name of struct definition to include
help.include-union=name of union definition to include
help.dump-includes=dump included symbols into specified file
help.h=print help
help.header-class-name=name of the header class
help.l=specify a library
help.source=generate java sources
help.t=target package for specified header files
help.non.option=header file
