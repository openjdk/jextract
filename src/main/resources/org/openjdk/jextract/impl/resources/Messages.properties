#
#  Copyright (c) 2020, Oracle and/or its affiliates. All rights reserved.
#  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
# 
#  This code is free software; you can redistribute it and/or modify it
#  under the terms of the GNU General Public License version 2 only, as
#  published by the Free Software Foundation.
# 
#  This code is distributed in the hope that it will be useful, but WITHOUT
#  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
#  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
#  version 2 for more details (a copy is included in the LICENSE file that
#  accompanied this code).
# 
#  You should have received a copy of the GNU General Public License version
#  2 along with this work; if not, write to the Free Software Foundation,
#  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
# 
#  Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
#  or visit www.oracle.com if you need additional information or have any
#  questions.
#

# error message
argfile.read.error=reading @argfile failed: {0}
cannot.read.header.file=cannot read header file: {0}
not.a.file=not a file: {0}
l.option.value.invalid=option value for -l option should be a name or an absolute path: {0}

# help messages for options
help.I=specify include files path
help.include-constant=name of macro or enum constant to include
help.include-var=name of global variable to include
help.include-function=name of function to include
help.include-typedef=name of type definition to include
help.include-struct=name of struct definition to include
help.include-union=name of union definition to include
help.D=define a C preprocessor macro
help.dump-includes=dump included symbols into specified file
help.h=print help
help.header-class-name=name of the header class
help.l=specify a library
help.output=specify the directory to place generated files
help.source=generate java sources
help.t=target package for specified header files
help.version=print version information and exit
help.non.option=header file
jextract.usage=\
Usage: jextract <options> <header file>                                                         \n\
                                                                                                \n\
Option                             Description                                                  \n\
------                             -----------                                                  \n\
-?, -h, --help                     print help                                                   \n\
-D --define-macro <macro>=<value>  define <macro> to <value> (or 1 if <value> omitted)          \n\
-I, --include-dir <dir>            add directory to the end of the list of include search paths \n\
--dump-includes <file>             dump included symbols into specified file                    \n\
--header-class-name <name>         name of the generated header class. If this option is not    \n\
\                                   specified, then header class name is derived from the header\n\
\                                   file name. For example, class "foo_h" for header "foo.h".   \n\
--include-function <name>          name of function to include                                  \n\
--include-constant <name>          name of macro or enum constant to include                    \n\
--include-struct <name>            name of struct definition to include                         \n\
--include-typedef <name>           name of type definition to include                           \n\
--include-union <name>             name of union definition to include                          \n\
--include-var <name>               name of global variable to include                           \n\
-l, --library <name | path>        specify a library by platform-independent name (e.g. "GL")   \n\
\                                   or by absolute path ("/usr/lib/libGL.so") that will be      \n\
\                                   loaded by the generated class.                              \n\
--output <path>                    specify the directory to place generated files. If this      \n\
\                                   option is not specified, then current directory is used.    \n\
--source                           generate java sources                                        \n\
-t, --target-package <package>     target package name for the generated classes. If this option\n\
\                                   is not specified, then unnamed package is used.             \n\
--version                          print version information and exit                           \n
