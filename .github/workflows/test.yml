name: Build and test Jextract

on:
  push:
    branches-ignore:
      - master
  workflow_dispatch:

jobs:

  linux-x64:
    runs-on: "ubuntu-20.04"

    steps:
    - name: 'Check out repository'
      uses: actions/checkout@v2
      with:
        fetch-depth: 1

    - name: 'Setup JDK 18'
      uses: oracle-actions/setup-java@v1
      with:
        release: 18

    - name: 'Check Java version'
      shell: sh
      run: |
        java --version
        echo JAVA_HOME=$JAVA_HOME

    - name: 'Setup LLVM'
      shell: sh
      run: |
        mkdir deps
        wget -O deps/LLVM.tar.xz https://github.com/llvm/llvm-project/releases/download/llvmorg-13.0.0/clang+llvm-13.0.0-x86_64-linux-gnu-ubuntu-20.04.tar.xz
        tar -xvf deps/LLVM.tar.xz -C deps
        ls ./deps/clang+llvm-13.0.0-x86_64-linux-gnu-ubuntu-20.04

    - name: 'Build Jextract'
      shell: sh
      run: |
        sh ./gradlew -Pjdk18_home=$JAVA_HOME -Plibclang_home=./deps/clang+llvm-13.0.0-x86_64-linux-gnu-ubuntu-20.04 clean verify        

    - name: 'Check out JTReg'
      uses: actions/checkout@v2
      with:
        repository: 'openjdk/jtreg'
        ref: 'jtreg-6.2+1'
        fetch-depth: 1
        path: deps/jtreg

    - name: 'Build JTReg'
      shell: bash
      working-directory: ./deps/jtreg
      run: |
        bash ./make/build.sh --jdk ${JAVA_HOME_11_X64}
        ls build/images/jtreg

    - name: 'Run tests'
      shell: sh
      run: |
        sh ./gradlew -Pjdk18_home=$JAVA_HOME -Plibclang_home=./deps/clang+llvm-13.0.0-x86_64-linux-gnu-ubuntu-20.04 -Pjtreg_home=./deps/jtreg/build/images/jtreg jtreg
