name: Build and test Jextract

on:
  push:
    branches-ignore:
      - master
      - pr/*
  workflow_dispatch:

env:
  CLANG_LLVM_RELEASE_VERSION: "13.0.0"

jobs:

  linux-x64:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-20.04]
        include:
          - os: ubuntu-20.04
            URL: https://github.com/llvm/llvm-project/releases/download/llvmorg-{{ env.CLANG_LLVM_RELEASE_VERSION }}/clang+llvm-{{ env.CLANG_LLVM_RELEASE_VERSION }}-x86_64-linux-gnu-ubuntu-20.04.tar.xz
          - os: macos-latest
            URL: https://github.com/llvm/llvm-project/releases/download/llvmorg-{{ env.CLANG_LLVM_RELEASE_VERSION }}/clang+llvm-{{ env.CLANG_LLVM_RELEASE_VERSION }}-x86_64-apple-darwin.tar.xz

    steps:
    - name: 'Check out repository'
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        
    - name: 'Prepare'
      shell: sh
      run: |
        mkdir deps

    - name: 'Download JDK 19'
      id: download_jdk_19
      uses: oracle-actions/setup-java@v1.1.1
      with:
        website: jdk.java.net
        release: 19
        install: false
        
    - name: 'Extract JDK 19'
      shell: sh
      run: |
        tar -xvf ${{ steps.download_jdk_19.outputs.archive }} -C deps
        ls ./deps/jdk-19
        
    - name: 'Setup Java 18'
      uses: oracle-actions/setup-java@v1.1.1
      with:
        release: 18

    - name: 'Check Java version'
      shell: sh
      run: |
        java --version
        echo JAVA_HOME=$JAVA_HOME

    - name: 'Setup LLVM'
      shell: sh
      run: |
        wget -O deps/LLVM.tar.gz {{ matrix.URL }}
        tar --strip-components=1 -zvxf deps/LLVM.tar.gz -C clang_llvm
        ls ./clang_llvm

    - name: 'Build Jextract'
      shell: sh
      run: |
        sh ./gradlew -Pjdk19_home=$(realpath ./deps/jdk-19) -Pllvm_home=./clang_llvm clean verify        

    - name: 'Check out JTReg'
      uses: actions/checkout@v2
      with:
        repository: 'openjdk/jtreg'
        ref: 'jtreg-6.2+1'
        fetch-depth: 1
        path: deps/jtreg

    - name: 'Build JTReg'
      shell: bash
      working-directory: ./deps/jtreg
      run: |
        bash ./make/build.sh --jdk ${JAVA_HOME_11_X64}
        ls build/images/jtreg

    - name: 'Run tests'
      shell: sh
      run: |
        sh ./gradlew -Pjdk19_home=$(realpath ./deps/jdk-19) -Pllvm_home=./clang_llvm -Pjtreg_home=./deps/jtreg/build/images/jtreg jtreg
