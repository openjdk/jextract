name: Build and test Jextract

on:
  push:
    branches-ignore:
      - panama
      - master
      - pr/*
  workflow_dispatch:

env:
  CLANG_LLVM_BASE_URL: "https://github.com/llvm/llvm-project/releases/download/llvmorg-13.0.0/clang+llvm-13.0.0-x86_64"
  ARCHIVE_EXT: "tar.xz"

jobs:

  build-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-20.04]
        include:
          - os: ubuntu-20.04
            TARGET: linux-gnu-ubuntu-20.04
            JAVA19_HOME: /tmp/deps/jdk-19
          - os: macos-latest
            TARGET: apple-darwin
            JAVA19_HOME: /tmp/deps/jdk-19/jdk-19.jdk/Contents/Home

    steps:
    - name: 'Check out repository'
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        
    - name: 'Prepare'
      shell: sh
      run: |
        mkdir -p deps/jtreg
        mkdir -p /tmp/deps

    - name: 'Download JDK 19'
      id: download_jdk_19
      uses: oracle-actions/setup-java@v1.1.1
      with:
        website: jdk.java.net
        release: 19
        install: false
        
    - name: 'Extract JDK 19'
      shell: sh
      run: |
        mkdir -p /tmp/deps/jdk-19
        tar --strip-components=1 -xvf ${{ steps.download_jdk_19.outputs.archive }} -C /tmp/deps/jdk-19
        ls -lah /tmp/deps/jdk-19

    - name: 'Check Java 19 version'
      shell: sh
      run: |
        ${{ matrix.JAVA19_HOME }}/bin/java --version

    - name: 'Setup Java 18'
      uses: oracle-actions/setup-java@v1.1.1
      with:
        release: 18

    - name: 'Check default Java version'
      shell: sh
      run: |
        java --version
        echo JAVA_HOME=$JAVA_HOME

    - name: 'Setup LLVM'
      shell: sh
      run: |
        mkdir -p /tmp/deps/clang_llvm
        wget -O /tmp/deps/LLVM.tar.gz ${{ env.CLANG_LLVM_BASE_URL }}-${{ matrix.TARGET }}.${{ env.ARCHIVE_EXT }}
        tar --strip-components=1 -xvf /tmp/deps/LLVM.tar.gz -C /tmp/deps/clang_llvm
        ls -lah /tmp/deps/clang_llvm

    - name: 'Build Jextract'
      shell: sh
      run: |
        sh ./gradlew -Pjdk19_home=${{ matrix.JAVA19_HOME }} -Pllvm_home=/tmp/deps/clang_llvm clean verify        

    - name: 'Check out JTReg'
      uses: actions/checkout@v2
      with:
        repository: 'openjdk/jtreg'
        ref: 'jtreg-6.2+1'
        fetch-depth: 1
        path: deps/jtreg

    - name: 'Build JTReg'
      shell: bash
      working-directory: ./deps/jtreg
      run: |
        bash ./make/build.sh --jdk ${JAVA_HOME_11_X64}
        ls build/images/jtreg

    - name: 'Run tests'
      shell: sh
      run: |
        sh ./gradlew -Pjdk19_home=${{ matrix.JAVA19_HOME }} -Pllvm_home=/tmp/deps/clang_llvm -Pjtreg_home=./deps/jtreg/build/images/jtreg jtreg
